/* automatically generated by rust-bindgen */


#![allow(non_snake_case)]


/// But the replacement type does use T!
///
/// <div rustbindgen replaces="JS::detail::MaybeWrapped" />
pub type JS_detail_MaybeWrapped<T> = T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JS_Rooted<T> {
    pub ptr: JS_detail_MaybeWrapped<T>,
    _phantom_0: ::std::marker::PhantomData<::std::cell::UnsafeCell<T>>,
}
impl <T> Default for JS_Rooted<T> {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
